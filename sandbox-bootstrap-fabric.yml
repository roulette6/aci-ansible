---
# This playbook is meant to be a simple bootstrap of an ACI sandbox
# once the fabric has been discovered. The playbook expects a small
# fabric with spine-201, leaf-201, and leaf-202. The playbook will
# create the following:

# FABRIC:
# Three leaf switch profiles and leaf interface profiles, two
# access port selectors, and one vPC port selector, with
# corresponding IPG requirements.

# ansible-playbook sandbox-bootstrap-fabric.yml --extra-vars "apic=aci.vm.jm"

- name: "Create fabric access policies"
  hosts: "{{ apic }}"
  ignore_errors: true
  vars:
    login_info: &login_info
      host: "{{ inventory_hostname }}"
      username: "{{ ansible_user }}"
      password: "{{ ansible_password }}"
      validate_certs: false

    rollback_file: "ce2_defaultOneTime-2022-12-08T22-35-59.tar.gz"

  tasks:
    - name: Roll back to blank slate config
      aci_rest:
        <<: *login_info

        path: "/api/node/mo/uni/fabric/configimp-default.json"
        method: post
        content:
          configImportP:
            attributes:
              dn: uni/fabric/configimp-default
              name: default
              snapshot: 'true'
              adminSt: triggered
              fileName: "{{ rollback_file }}"
              importType: replace
              importMode: atomic
              rn: configimp-default
              status: created,modified
            children: []
      delegate_to: localhost
      tags: rollback

    - name: Set GUI alias
      aci_rest:
        <<: *login_info

        path: "/api/node/mo/uni/userext/preloginbanner.json"
        method: post
        content:
          aaaPreLoginBanner:
            attributes:
              dn: uni/userext/preloginbanner
              guiTextMessage: "{{ gui_alias }}"
              message: APIC - ACI sandbox
              switchMessage: Switch - ACI sandbox
              isGuiMessageText: 'true'
              guiMessage: ACI sandbox
            children: []
      delegate_to: localhost


    - name: "Create VLAN pools"
      aci_vlan_pool:
        <<: *login_info

        annotation: "orchestrator:ansible"
        pool: "{{ item.vlan_pool }}"
        pool_allocation_mode: static
        description: Diamond Dogs VLANs
        state: present
      delegate_to: localhost
      with_items: "{{ tenants }}"
      loop_control:
        pause: 1

    - name: "Create VLAN pool encapsulation blocks"
      aci_vlan_pool_encap_block:
        <<: *login_info

        annotation: "orchestrator:ansible"
        pool: "{{ item.vlan_pool }}"
        pool_allocation_mode: static
        block_name: "{{ item.encaps_block }}"
        block_start: "{{ item.block_start }}"
        block_end: "{{ item.block_end }}"
        state: present
      delegate_to: localhost
      with_items: "{{ tenants }}"

    - name: "Create physical domains"
      aci_domain:
        <<: *login_info

        annotation: "orchestrator:ansible"
        domain: "{{ item.domain }}"
        domain_type: "{{ item.domain_type }}"
        state: present
      delegate_to: localhost
      with_items: "{{ tenants }}"
      loop_control:
        pause: 1

    - name: "Bind physical domains to VLAN pools"
      aci_domain_to_vlan_pool:
        <<: *login_info

        annotation: "orchestrator:ansible"
        domain: "{{ item.domain }}"
        domain_type: "{{ item.domain_type }}"
        pool: "{{ item.vlan_pool }}"
        pool_allocation_mode: static
        state: present
      delegate_to: localhost
      with_items: "{{ tenants }}"

    - name: "Create leaf interface profiles (infraAccPortP)"
      aci_interface_policy_leaf_profile:
        <<: *login_info

        annotation: "orchestrator:ansible"
        leaf_interface_profile: "{{ item.name }}_ifp"
        description: Created by Ansible
        state: present
      delegate_to: localhost
      with_items:
        - "{{ leaf_201 }}"
        - "{{ leaf_202 }}"
        - "{{ leaf_201_202 }}"
      tags: leaf_ifp

    - name: "Create leaf switch profiless (infraNodeP)"
      aci_switch_policy_leaf_profile:
        <<: *login_info

        annotation: "orchestrator:ansible"
        leaf_profile: "{{ item.name }}_swp"
        description: Created by Ansible
        state: present
      delegate_to: localhost
      tags: leaf_swp
      with_items:
        - "{{ leaf_201 }}"
        - "{{ leaf_202 }}"
        - "{{ leaf_201_202 }}"
      loop_control:
        pause: 1

    - name: "Add leaf selector (infraLeafS) to switch profiles (infraNodeP)"
      aci_switch_leaf_selector:
        <<: *login_info

        annotation: "orchestrator:ansible"
        leaf_profile: "{{ item.name }}_swp"
        leaf: "{{ item.name }}_sel"
        leaf_node_blk: "{{ item.swp.node_block }}"
        from: "{{ item.swp.from }}"
        to: "{{ item.swp.to }}"
        state: present
      delegate_to: localhost
      tags: leaf_swp
      with_items:
        - "{{ leaf_201 }}"
        - "{{ leaf_202 }}"
        - "{{ leaf_201_202 }}"
      loop_control:
        pause: 1

    - name: "Associate swp (infraNodeP) with ifp (infraAccPortP)"
      aci_interface_selector_to_switch_policy_leaf_profile:
        <<: *login_info

        annotation: "orchestrator:ansible"
        leaf_profile: "{{ item.name }}_swp"
        interface_selector: "{{ item.name }}_ifp"
        state: present
      delegate_to: localhost
      tags: leaf_swp
      with_items:
        - "{{ leaf_201 }}"
        - "{{ leaf_202 }}"
        - "{{ leaf_201_202 }}"

    - name: "Create access port IPG"
      aci_interface_policy_leaf_policy_group:
        <<: *login_info

        annotation: "orchestrator:ansible"
        lag_type: leaf
        policy_group: "{{ ipg.access }}"
        lldp_policy: system-lldp-enabled
        state: present
      delegate_to: localhost

    - name: "Create VPC IPG"
      aci_interface_policy_leaf_policy_group:
        <<: *login_info

        annotation: "orchestrator:ansible"
        lag_type: node
        policy_group: "{{ ipg.vpc }}"
        port_channel_policy: system-lacp-active
        lldp_policy: system-lldp-enabled
        state: present
      delegate_to: localhost

    - name: "Wait one second"
      wait_for:
        timeout: 1
      delegate_to: localhost

    - name: "Create access port selectors"
      aci_access_port_to_interface_policy_leaf_profile:
        <<: *login_info

        annotation: "orchestrator:ansible"
        leaf_interface_profile: "{{ item.leaf_ifp }}"
        access_port_selector: "{{ item.acc_port_sel }}"
        description: "{{ item.acc_port_sel }} Created by Ansible"
        policy_group: "{{ item.ipg }}"
        state: present
      delegate_to: localhost
      with_items:
        - "{{ leaf_201.ifps }}"
        - "{{ leaf_202.ifps }}"
        - "{{ leaf_201_202.ifps }}"
      loop_control:
        pause: 1
      tags: port

    - name: "Create port blocks for port selectors"
      aci_access_port_block_to_access_port:
        <<: *login_info

        annotation: "orchestrator:ansible"
        interface_profile: "{{ item.leaf_ifp }}"
        access_port_selector: "{{ item.acc_port_sel }}"
        port_blk: "{{ item.leaf_port_blk }}"
        port_blk_description: "{{ item.acc_port_sel }}"
        from_port: "{{ item.from_port }}"
        to_port: "{{ item.to_port }}"
        state: present
      delegate_to: localhost
      with_items:
        - "{{ leaf_201.ifps }}"
        - "{{ leaf_202.ifps }}"
        - "{{ leaf_201_202.ifps }}"
      tags: port
